---
import type { GetStaticPaths, InferGetStaticParamsType, InferGetStaticPropsType } from 'astro';
import Layout from '../layouts/Layout.astro';

interface Frontmatter {
  title?: string;
  popular_name?: string;
  developmental_codes?: string[];
  street_names?: string[];
  product_names?: string[];
  description?: string;
  short_description?: string;
  benefits?: string[];
  dosage_levels?: string[];
  research?: string[];
  tags?: string[];
  affiliate_links?: string[];
  is_natty?: boolean;
  created_at?: string;
  last_updated_at?: string;
}

export const getStaticPaths = (async () => {
  const peptideModules = import.meta.glob<Frontmatter>('../content/peptides/*.md', { eager: true });

  const peptideFiles = Object.entries(peptideModules).map(([path, file]) => {
    const slug = path.split('/').pop()?.replace('.md', '') || '';
    return {
      params: { peptide: slug },
      props: { file }
    };
  });

  return peptideFiles;
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { file } = Astro.props as Props;
const { default: Content, frontmatter } = file as { default: any; frontmatter: Frontmatter };

// Build dynamic description
const pageTitle = `${frontmatter.title || 'Peptide'} - Still Natty`;
const pageDescription = frontmatter.description || frontmatter.short_description || `Learn about ${frontmatter.title}, including benefits, dosages, and scientific research.`;
---

<Layout
  title={pageTitle}
  description={pageDescription}
  type="article"
  publishedTime={frontmatter.created_at}
  modifiedTime={frontmatter.last_updated_at}
>
  <div class="hero min-h-screen">
    <div class="hero-content w-full max-w-4xl">
      <div class="w-full">
        <a href="/" class="btn btn-link btn-primary">← Back to Peptides</a>
        <article class="card bg-base-100 shadow-xl mt-4">
          <div class="card-body">
            <div class="flex items-start justify-between">
              <h1 class="card-title text-4xl md:text-5xl">{frontmatter.title}</h1>
              {frontmatter.is_natty !== undefined && (
                <span class={`badge badge-lg ${frontmatter.is_natty ? 'badge-success' : 'badge-error'}`}>
                  {frontmatter.is_natty ? '✓ Natty' : '✗ Not Natty'}
                </span>
              )}
            </div>

            {frontmatter.tags && frontmatter.tags.length > 0 && (
              <div class="flex flex-wrap gap-2">
                {frontmatter.tags.map((tag) => (
                  <span class="badge badge-primary">{tag}</span>
                ))}
              </div>
            )}

            {frontmatter.description && (
              <div class="alert alert-info">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span class="text-lg">{frontmatter.description}</span>
              </div>
            )}

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              {frontmatter.popular_name && (
                <div class="card bg-base-200">
                  <div class="card-body card-compact">
                    <h3 class="card-title text-sm">Popular Name</h3>
                    <p class="text-lg font-semibold">{frontmatter.popular_name}</p>
                  </div>
                </div>
              )}

              {frontmatter.developmental_codes && frontmatter.developmental_codes.length > 0 && (
                <div class="card bg-base-200">
                  <div class="card-body card-compact">
                    <h3 class="card-title text-sm">Developmental Codes</h3>
                    <ul class="list-disc list-inside">
                      {frontmatter.developmental_codes.map((code) => (
                        <li>{code}</li>
                      ))}
                    </ul>
                  </div>
                </div>
              )}
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              {frontmatter.street_names && frontmatter.street_names.length > 0 && (
                <div class="card bg-base-200">
                  <div class="card-body card-compact">
                    <h3 class="card-title text-sm">Street Names</h3>
                    <ul class="list-disc list-inside">
                      {frontmatter.street_names.map((name) => (
                        <li>{name}</li>
                      ))}
                    </ul>
                  </div>
                </div>
              )}

              {frontmatter.product_names && frontmatter.product_names.length > 0 && (
                <div class="card bg-base-200">
                  <div class="card-body card-compact">
                    <h3 class="card-title text-sm">Product Names</h3>
                    <ul class="list-disc list-inside">
                      {frontmatter.product_names.map((name) => (
                        <li>{name}</li>
                      ))}
                    </ul>
                  </div>
                </div>
              )}
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              {frontmatter.benefits && frontmatter.benefits.length > 0 && (
                <div class="card bg-base-200">
                  <div class="card-body card-compact">
                    <h3 class="card-title text-sm">Benefits</h3>
                    <ul class="list-disc list-inside">
                      {frontmatter.benefits.map((benefit) => (
                        <li>{benefit}</li>
                      ))}
                    </ul>
                  </div>
                </div>
              )}

              {frontmatter.dosage_levels && frontmatter.dosage_levels.length > 0 && (
                <div class="card bg-base-200">
                  <div class="card-body card-compact">
                    <h3 class="card-title text-sm">Dosage Levels</h3>
                    <ul class="list-disc list-inside">
                      {frontmatter.dosage_levels.map((level) => (
                        <li>{level}</li>
                      ))}
                    </ul>
                  </div>
                </div>
              )}
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              {frontmatter.research && frontmatter.research.length > 0 && (
                <div class="card bg-base-200">
                  <div class="card-body card-compact">
                    <h3 class="card-title text-sm">Research</h3>
                    <ul class="list-disc list-inside">
                      {frontmatter.research.map((item) => (
                        <li>{item}</li>
                      ))}
                    </ul>
                  </div>
                </div>
              )}

              {frontmatter.affiliate_links && frontmatter.affiliate_links.length > 0 && (
                <div class="card bg-base-200">
                  <div class="card-body card-compact">
                    <h3 class="card-title text-sm">Where to Buy</h3>
                    <ul class="list-disc list-inside">
                      {frontmatter.affiliate_links.map((link) => (
                        <li><a href={link} class="link link-primary" target="_blank" rel="noopener noreferrer">{link}</a></li>
                      ))}
                    </ul>
                  </div>
                </div>
              )}
            </div>

            <div class="divider"></div>
            <div class="prose prose-lg max-w-none">
              <Content />
            </div>
            
            {frontmatter.last_updated_at && (
              <div class="mt-4 text-sm text-base-content/60">
                Last Updated: {new Date(frontmatter.last_updated_at).toLocaleDateString()}
              </div>
            )}
          </div>
        </article>
      </div>
    </div>
  </div>
</Layout>
